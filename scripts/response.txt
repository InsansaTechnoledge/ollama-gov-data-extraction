import re
from datetime import datetime, timedelta

def extract_data(raw_text):
    # Extract name from raw text
    match = re.search(r'\w+ \d{4}', raw_text)
    if match:
        name = match.group()
    else:
        name = ""

    # Initialize date variables
    date_of_notification = None
    date_of_commencement = None
    end_date = None

    # Extract dates from raw text
    matches = re.findall(r'\d{1,2} \w+ \d{4}', raw_text)
    if matches:
        for match in matches:
            day, month, year = map(int, match.split())
            date = datetime(year, month, day)
            if date <= datetime(2025, 2, 24):
                if date_of_notification is None or date > date_of_notification:
                    date_of_notification = date
                if date_of_commencement is None or date < date_of_commencement:
                    date_of_commencement = date
                if end_date is None or date >= end_date:
                    end_date = date

    # Extract apply link from raw text
    match = re.search(r'https?://[^ ]+', raw_text)
    if match:
        apply_link = match.group()
    else:
        apply_link = ""

    # Extract event type from raw text
    if "Exam" in raw_text or "Examination" in raw_text:
        event_type = "Exam"
    elif "Result" in raw_text:
        event_type = "Result"
    elif "AdmitCard" in raw_text:
        event_type = "AdmitCard"
    else:
        event_type = None

    # Extract document links from raw text
    matches = re.findall(r'https?://[^ ]+', raw_text)
    document_links = [match for match in matches if not apply_link.startswith(match)]

    # If no dates are found, set default values
    if date_of_notification is None:
        date_of_notification = datetime(2025, 2, 24).date()
    if date_of_commencement is None:
        date_of_commencement = date_of_notification
    if end_date is None:
        end_date = datetime(2025, 12, 31).date()

    return {
        "name": name,
        "date_of_notification": str(date_of_notification) if date_of_notification else "",
        "date_of_commencement": str(date_of_commencement) if date_of_commencement else "",
        "end_date": str(end_date) if end_date else "",
        "apply_link": apply_link,
        "event_type": event_type,
        "document_links": document_links
    }

raw_text = """
wate 2197 / Homo 2025

11 fersrfeet | 1

3 werent Ag o2 aye Aline Hl oraerHa F) ve H organ fs arr set Ger wea,
ara vd saa waht frat fread & —

Qualification:- BCA or MCA/B.Tech or M.Tech,in Computer Science or Information Technology.
Job Analysis:- Data Handling, Data Analysis with Interpretation and Result Preparation as per

reservation criteria of Uttarakhand Govt.

Job Description:- Knowledge, Understanding and skill of:-
1) Data preparation, classification, editing, presentation and analysis etc.
2) Different types of sampling design, statistical tool using, interpretation indecision making and

drawing inferences,
3) Result preparation with respect to different types of vertical and horizontal reservation

allocation as per requisition of various deparments of UK. Govt.
4) Preference allocation of post in different Govt. Departments of UK with multicadre post.

5) Software application preparation as per requirement of Commission.
Experience:- 1- At least 4 years experience in Software Design & Development, Testing, auditing and

implementation. 2- Database design, optimization, querying and backup.

wrgex UR a tat uf ws S o1 at & fore arf vd Bark smatr fea 4
soar a ue amt & asf A aft fen a ore | vad Vasil eg ware uRsata ea
ann wd waa—ara wy fraarpe gfe ot arr) aera Vasil Sg amqeret foear GAT SPT |

Va Fe Sg aq va, waa HT Wh UTAGNI savas wail G wer feats 10 Are, 2025
WH saga ST BY sAa controllerexamuksssc@gmail.com W VfFe fear GAT arava z | dq
a
"""

result = extract_data(raw_text)
print(result)
