import re
from datetime import datetime, timedelta
import json

raw_text = """ty usa user veils
7] National Testing Agency

wera wae
(Sere Ren Rrurt Ran Haters: ua ROR & Ted UH aT HSA a
‘An Autonomous Organization under the Department of Higher Education, Ministry of Education, Government of India
PUBLIC NOTICE

01 January 2025

Sub: Examination Schedule for JEE (Main)-2025 Session-1 Reg.

The National Testing Agency is conducting the Joint Entrance Examination (Main)—2025 Session-1
at different Centres located in various cities throughout the country and 15 cities outside India. The
schedule of examination for this session will be as follows:

22, 23, 24, 28 &
29 January 2025

Paper | (B.E./B. Tech) First shift (09:00 A.M. to 12:00 Noon) and

Second Shift (03:00 P.M. to 06:00 P.M.)

Paper 2A (B. Arch), Paper 2B (B.
Planning) and Paper 2A & 2B (B.
Arch & B. Planning both)

30 January 2025 Second Shift (03:00 P.M. to 06:30 P.M.)

The Candidates are advised to visit the official websites of NTA (www.nta.ac.in) and
(https://jeemain.nta.nic.in/) for the latest updates.

Director (Exams)

werd ya / Helpline Number: +91-11-40759000, e-mail: jeemain@nta.nicin Blais

a , aaese / Website www.nta.ac.in, https://jeemain.nta.nic.in/ i YEARS OF
7 THE MAHATMA


        
        Add https://cdnbbsr.s3waas.gov.in/s3f8e59f4b2fe7c5705bf878bbd494ccdf/uploads/2025/01/2025010196.pdf in document_links and https://jeemain.nta.nic.in/ in apply_link.
        Event Type should be either "Exam", "Result" or "AdmitCard" only.
        document_links is an array of simple strings and not json objects.
        Name key should not be empty. Extract a valid name from rawtext.
        Date_of_notification, date_of_commencement and end_date should not be null or empty until no date is specified. 
        Make sure that date is correct. 
        Don't provide wrong information and date.
        Only relevant information extracted from raw text should be considered while creating the json. 
        If couldn't find a correct date, leave it empty. 
        If date_of_notification is not present, set it to 2025-02-18
        Only consider those events which are currently active or upcoming as per the date 2025-02-18.
        
        Generate a well-formed JSON object based on the above guidelines. The keys: name, date_of_notification, date_of_commencement, end_date, apply_link, event_type and document_links are mandatory. Any other data should be described under details key only. Don't create separate key for that data at top level. Ensure correct formatting and structure.
    """

name = None
date_of_notification = None
date_of_commencement = None
end_date = None
apply_link = []
event_type = None

# Extract name from raw_text
name_pattern = r'\S+'
names = re.findall(name_pattern, raw_text)
if names:
    name = names[0]

# Check if event_type is "Exam"
exam_event = 'The National Testing Agency is conducting the Joint Entrance Examination (Main)—2025 Session-1'
if exam_event in raw_text:
    event_type = 'Exam'

# Extract date_of_notification from raw_text
date_pattern = r'\d{2} \w+ \d{4}'
date_of_notification_match = re.search(date_pattern, raw_text)
if date_of_notification_match:
    date_of_notification = datetime.strptime(date_of_notification_match.group(), '%d %b %Y').strftime('%Y-%m-%d')
else:
    date_of_notification = '2025-02-18'

# Extract date_of_commencement from raw_text
date_pattern = r'\d{2} \w+ \d{4}'
date_of_commencement_match = re.search(date_pattern, raw_text)
if date_of_commencement_match:
    date_of_commencement = datetime.strptime(date_of_commencement_match.group(), '%d %b %Y').strftime('%Y-%m-%d')
else:
    date_of_commencement = None

# Extract end_date from raw_text
end_date_pattern = r'\d{2} \w+ \d{4}'
end_date_match = re.search(end_date_pattern, raw_text)
if end_date_match:
    end_date = datetime.strptime(end_date_match.group(), '%d %b %Y').strftime('%Y-%m-%d')
else:
    end_date = None

# Extract apply_link from raw_text
apply_link_pattern = r'https?://[^\s]+'
apply_link_list = re.findall(apply_link_pattern, raw_text)
if len(apply_link_list) > 0:
    apply_link.append(apply_link_list[0])

# Construct final JSON object
json_object = {
    'name': name,
    'date_of_notification': date_of_notification,
    'date_of_commencement': date_of_commencement,
    'end_date': end_date,
    'apply_link': apply_link,
    'event_type': event_type,
    'document_links': [
        'https://cdnbbsr.s3.amazonaws.com/uploads/2025/01/2025010196.pdf',
        'https://jeemain.nta.nic.in/',
    ]
}

print(json_object)