{2} \w+ \d{4}'
date_of_notification_match = re.search(date_pattern, raw_text)
if date_of_notification_match:
    date_of_notification = datetime.strptime(date_of_notification_match.group(), '%d %b %Y').strftime('%Y-%m-%d')
else:
    date_of_notification = '2025-02-18'

# Extract date_of_commencement from raw_text
date_pattern = r'\d{2} \w+ \d{4}'
date_of_commencement_match = re.search(date_pattern, raw_text)
if date_of_commencement_match:
    date_of_commencement = datetime.strptime(date_of_commencement_match.group(), '%d %b %Y').strftime('%Y-%m-%d')
else:
    date_of_commencement = None

# Extract end_date from raw_text
end_date_pattern = r'\d{2} \w+ \d{4}'
end_date_match = re.search(end_date_pattern, raw_text)
if end_date_match:
    end_date = datetime.strptime(end_date_match.group(), '%d %b %Y').strftime('%Y-%m-%d')
else:
    end_date = None

# Extract apply_link from raw_text
apply_link_pattern = r'https?://[^\s]+'
apply_link_list = re.findall(apply_link_pattern, raw_text)
if len(apply_link_list) > 0:
    apply_link.append(apply_link_list[0])

# Construct final JSON object
json_object = {
    'name': name,
    'date_of_notification': date_of_notification,
    'date_of_commencement': date_of_commencement,
    'end_date': end_date,
    'apply_link': apply_link,
    'event_type': event_type,
    'document_links': [
        'https://cdnbbsr.s3.amazonaws.com/uploads/2025/01/2025010196.pdf',
        'https://jeemain.nta.nic.in/',
    ]
}